@using VRT.Resume.Application.Persons.Queries.GetPersonSkills;
@model PersonSkillInListVM[]

@{ 
    var skills = Model == null
        ? new Dictionary<string, PersonSkillInListVM[]>()
        : Model
            .OrderBy(o=>o.Type)
            .GroupBy(g => g.Type)
            .ToDictionary(k => k.Key, v => v.OrderBy(o=>o.SkillId).ToArray());
    var editButtonLabel = Html.GetLabel(LabelNames.ButtonEditData);
    var deleteButtonLabel = Html.GetLabel(LabelNames.ButtonDelete);
}

<div class="text-right mt-3 d-flex justify-content-between  ">
    <span class="h4 text-muted">@Html.GetLabel(TabNames.Skills)</span>
    <a class="btn btn-light btn-outline-secondary"
       title="@Html.GetLabel(LabelNames.ButtonAddNewEdu)"
       href="@(Url.Action("Add", "PersonSkills"))">
        <span class="mr-auto">+</span>
    </a>
</div>

@foreach (var g in skills)
{
    <fieldset class="border-bottom mb-1">
        <legend>@Html.GetLabel(g.Key)</legend>
    </fieldset>    
<div class="d-flex flex-wrap">
    @foreach (var m in g.Value)
    {
        <div class="card mr-2 mb-2">            
            <div class="card-body">
                <span class="h6" >@m.Name (@(m.Level))</span>  
                @Html.Partial("_EditDeleteToolbar", new EditDeleteToolbarData("PersonSkills",m.SkillId))                
            </div>            
        </div>
    }
</div>
}